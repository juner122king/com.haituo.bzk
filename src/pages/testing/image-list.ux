<template>
  <refresh
    offset="100px"
    refreshing="{{isRefeshing}}"
    onrefresh="doRefresh"
    type="pulldown"
  >
    <div class="no-result" if="{{imageList.length === 0}}">
      <image src="./img/no-result.png"></image>
    </div>
    <list class="img-list" onscrollbottom="bottom" else>
      <list-item
        class="list-item"
        type="image"
        for="{{imageList}}"
        onclick="clickImg($idx)"
      >
        <image
          src="{{$item.picture}}"
          onerror="loadFail($item,$idx)"
        ></image>
      </list-item>
    </list>
  </refresh>
</template>

<script>
import prompt from '@system.prompt'
import media from '@system.media'
// import { fetchImageList, doFetch, getImageList } from '../../helper/data.js'

export default {
  data() {
    return {
      imageList: [],
      count: 10,
      isRefeshing: false
    }
  },

  props: {
    loading: {
      type: Boolean,
      default: false
    },
    category: ''
  },

  onInit() {
    this.$watch('loading', 'watchLoading')
    if (this.loading) {
      this.refreshList()
    }
  },

  watchLoading(newV, oldV) {
    if (newV && !this.imageList.length) {
      this.refreshList()
    }
  },

  refreshList() {

    $apis.example.list({ type: this.category.codeValue }).then((res) => {
      console.log(res, '壁纸列表')
      this.imageList = res.data
    })

  },

  bottom() {
    this.refreshList()
  },

  doRefresh() {
    this.isRefeshing = true
    this.imageList = []
    this.refreshList()
    setTimeout(() => {
      this.isRefeshing = false
    }, 2000)
  },

  clickImg(idx) {
    console.log('图片列表', this.imageList)
    $router.push({
      uri: "pages/gallery",
      params: {
        title: this.category.codeName,
        imageListString: this.imageList,
        index: idx
      }
    })
  },

  loadFail(item, idx) {
    console.log('Img loading fail', item, idx)
    const newUrl = item + '&' + +new Date()
    this.imageList.splice(idx, 1, newUrl)
  }
}
</script>

<style lang="less">
@import '../../assets/styles/style.less';

.no-result {
  width: 100%;
  height: 100%;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  image {
    width: 180px;
    height: 180px;
    margin-top: 200px;
    margin-bottom: 15px;
  }
}

.big-img-wrap {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  .mask {
    background-color: rgba(0, 0, 0, 0.7);
  }
  .big-img {
    object-fit: contain;
  }
  .nav {
    position: absolute;
    align-self: center;
    width: 40px;
    height: 80px;
    background-color: rgba(255, 255, 255, 0.5);
    flex-direction: column;
    justify-content: center;
     align-items: center;
    image {
      width: 25px;
    }
  }
  .download {
    width: 30px;
    position: absolute;
    top: 30px;
    right: 30px;
  }
}

.img-list {
  width: 100%;
  height: 100%;
  columns: 3;
  padding: 4px 6px 160px;
  /* margin-bottom: 150px; */
  .list-item {
    margin: 4px 8px 12px;
  }
  image {
    width: 100%;
    height: 480px;
    border-radius: 20px;
  }
}
</style>
